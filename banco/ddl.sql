-- MySQL Script generated by MySQL Workbench
-- 12/08/16 22:16:3X
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema u990873117_base
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `u990873117_base` ;

-- -----------------------------------------------------
-- Schema u990873117_base
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `u990873117_base` DEFAULT CHARACTER SET utf8 ;
USE `u990873117_base` ;

-- -----------------------------------------------------
-- Table `u990873117_base`.`orgao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u990873117_base`.`orgao` ;

CREATE TABLE IF NOT EXISTS `u990873117_base`.`orgao` (
  `codigo` INT NOT NULL,
  `nome` VARCHAR(200) NOT NULL,
  `orgao_sup` INT NULL,
  PRIMARY KEY (`codigo`),
  INDEX `fk_orgao_sup_idx` (`orgao_sup` ASC),
  CONSTRAINT `fk_orgao_sup`
    FOREIGN KEY (`orgao_sup`)
    REFERENCES `u990873117_base`.`orgao` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table `u990873117_base`.`funcao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u990873117_base`.`funcao` ;

CREATE TABLE IF NOT EXISTS `u990873117_base`.`funcao` (
  `codigo` INT NOT NULL,
  `nome` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`codigo`))
;


-- -----------------------------------------------------
-- Table `u990873117_base`.`subfuncao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u990873117_base`.`subfuncao` ;

CREATE TABLE IF NOT EXISTS `u990873117_base`.`subfuncao` (
  `codigo` INT NOT NULL,
  `nome` VARCHAR(200) NOT NULL,
  `funcao` INT NOT NULL,
  PRIMARY KEY (`codigo`),
  INDEX `fk_funcao_idx` (`funcao` ASC),
  CONSTRAINT `fk_funcao`
    FOREIGN KEY (`funcao`)
    REFERENCES `u990873117_base`.`funcao` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table `u990873117_base`.`programa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u990873117_base`.`programa` ;

CREATE TABLE IF NOT EXISTS `u990873117_base`.`programa` (
  `codigo` INT NOT NULL,
  `nome` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`codigo`))
;


-- -----------------------------------------------------
-- Table `u990873117_base`.`acao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u990873117_base`.`acao` ;

CREATE TABLE IF NOT EXISTS `u990873117_base`.`acao` (
  `codigo` VARCHAR(200) NOT NULL,
  `nome` VARCHAR(200) NOT NULL,
  `linguagem_cidada` VARCHAR(200) NULL,
  `programa` INT NOT NULL,
  `subfuncao` INT NOT NULL,
  PRIMARY KEY (`codigo`),
  INDEX `fk_programa_idx` (`programa` ASC),
  INDEX `fk_subfuncao_idx` (`subfuncao` ASC),
  CONSTRAINT `fk_programa`
    FOREIGN KEY (`programa`)
    REFERENCES `u990873117_base`.`programa` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_subfuncao`
    FOREIGN KEY (`subfuncao`)
    REFERENCES `u990873117_base`.`subfuncao` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table `u990873117_base`.`unidade_gestora`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u990873117_base`.`unidade_gestora` ;

CREATE TABLE IF NOT EXISTS `u990873117_base`.`unidade_gestora` (
  `codigo` INT NOT NULL,
  `nome` VARCHAR(200) NOT NULL,
  `orgao` INT NOT NULL,
  PRIMARY KEY (`codigo`),
  INDEX `fk_orgao_idx` (`orgao` ASC),
  CONSTRAINT `fk_orgao`
    FOREIGN KEY (`orgao`)
    REFERENCES `u990873117_base`.`orgao` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table `u990873117_base`.`favorecido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u990873117_base`.`favorecido` ;

CREATE TABLE IF NOT EXISTS `u990873117_base`.`favorecido` (
  `nome` VARCHAR(200) NOT NULL,
  `cpf` VARCHAR(11) NOT NULL,
  PRIMARY KEY (`cpf`))
;


-- -----------------------------------------------------
-- Table `u990873117_base`.`diaria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u990873117_base`.`diaria` ;

CREATE TABLE IF NOT EXISTS `u990873117_base`.`diaria` (
  `codigo` INT NOT NULL AUTO_INCREMENT,
  `documento` VARCHAR(15) NOT NULL,
  `gestao` VARCHAR(10) NOT NULL,
  `dt_diaria` DATE NOT NULL,
  `valor` DECIMAL(10,2) NOT NULL,
  `favorecido` VARCHAR(11) NOT NULL,
  `ug_pagadora` INT NOT NULL,
  `acao` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`codigo`),
  INDEX `fk_diaria_ug_pagadora_idx` (`ug_pagadora` ASC),
  INDEX `fk_acao_idx` (`acao` ASC),
  INDEX `fk_favorecido_idx` (`favorecido` ASC),
  CONSTRAINT `fk_diaria_ug_pagadora`
    FOREIGN KEY (`ug_pagadora`)
    REFERENCES `u990873117_base`.`unidade_gestora` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_acao`
    FOREIGN KEY (`acao`)
    REFERENCES `u990873117_base`.`acao` (`codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favorecido`
    FOREIGN KEY (`favorecido`)
    REFERENCES `u990873117_base`.`favorecido` (`cpf`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table `u990873117_base`.`log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `u990873117_base`.`log` ;

CREATE TABLE IF NOT EXISTS `u990873117_base`.`log` (
  `codigo` INT NOT NULL AUTO_INCREMENT,
  `data` DATETIME NOT NULL,
  `operacao` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`codigo`))
;

USE `u990873117_base` ;

-- -----------------------------------------------------
-- Placeholder table for view `u990873117_base`.`vw_diarias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `u990873117_base`.`vw_diarias` (`cd_orgao_superior` INT, `nm_orgao_superior` INT, `cd_orgao_subordinado` INT, `nm_orgao_subordinado` INT, `cd_unidade_gestora` INT, `nm_unidade_gestora` INT, `cd_funcao` INT, `nm_funcao` INT, `cd_subfuncao` INT, `nm_subfuncao` INT, `cd_programa` INT, `nm_programa` INT, `cd_acao` INT, `nm_acao` INT, `linguagem_cidada` INT, `cpf_favorecido` INT, `nm_favorecido` INT, `documento` INT, `gestao` INT, `dt_diaria` INT, `valor` INT);

-- -----------------------------------------------------
-- procedure inserir_orgao_subordinado
-- -----------------------------------------------------

USE `u990873117_base`;
DROP procedure IF EXISTS `u990873117_base`.`inserir_orgao_subordinado`;

DELIMITER $$
USE `u990873117_base`$$
CREATE PROCEDURE inserir_orgao_subordinado (IN cod INT, IN nm VARCHAR(200), IN cd_org_sup INT)
BEGIN
	declare cd INT;
	SELECT codigo INTO cd FROM orgao where codigo = cod;
    if cd is null then
		insert into orgao(codigo, nome, orgao_sup) values (cod, nm, cd_org_sup);
	end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure inserir_orgao_superior
-- -----------------------------------------------------

USE `u990873117_base`;
DROP procedure IF EXISTS `u990873117_base`.`inserir_orgao_superior`;

DELIMITER $$
USE `u990873117_base`$$
CREATE PROCEDURE inserir_orgao_superior (IN cod INT, IN nm VARCHAR(200))
BEGIN
	declare cd INT;
	SELECT codigo INTO cd FROM orgao where codigo = cod;
    if cd is null then
		insert into orgao(codigo, nome) values (cod, nm);
	end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure inserir_funcao
-- -----------------------------------------------------

USE `u990873117_base`;
DROP procedure IF EXISTS `u990873117_base`.`inserir_funcao`;

DELIMITER $$
USE `u990873117_base`$$
CREATE PROCEDURE inserir_funcao (IN cod INT, IN nm VARCHAR(200))
BEGIN
	declare cd INT;
	SELECT codigo INTO cd FROM funcao where codigo = cod;
    if cd is null then
		insert into funcao(codigo, nome) values (cod, nm);
	end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure inserir_unidade_gestora
-- -----------------------------------------------------

USE `u990873117_base`;
DROP procedure IF EXISTS `u990873117_base`.`inserir_unidade_gestora`;

DELIMITER $$
USE `u990873117_base`$$
CREATE PROCEDURE inserir_unidade_gestora (IN cod INT, IN nm VARCHAR(200), IN cd_orgao INT)
BEGIN
	declare cd INT;
	SELECT codigo INTO cd FROM unidade_gestora where codigo = cod;
    if cd is null then
		insert into unidade_gestora(codigo, nome, orgao) values (cod, nm, cd_orgao);
	end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure inserir_subfuncao
-- -----------------------------------------------------

USE `u990873117_base`;
DROP procedure IF EXISTS `u990873117_base`.`inserir_subfuncao`;

DELIMITER $$
USE `u990873117_base`$$
CREATE PROCEDURE inserir_subfuncao (IN cod INT, IN nm VARCHAR(200), IN cd_funcao INT)
BEGIN
	declare cd INT;
	SELECT codigo INTO cd FROM subfuncao where codigo = cod;
    if cd is null then
		insert into subfuncao(codigo, nome, funcao) values (cod, nm, cd_funcao);
	end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure inserir_linguagem_cidada
-- -----------------------------------------------------

USE `u990873117_base`;
DROP procedure IF EXISTS `u990873117_base`.`inserir_linguagem_cidada`;

DELIMITER $$
USE `u990873117_base`$$
CREATE PROCEDURE inserir_linguagem_cidada (INOUT cod INT, IN nm VARCHAR(200))
BEGIN
	SELECT codigo INTO cod FROM linguagem_cidada where descricao = nm;
    if cod is null then
		insert into linguagem_cidada(codigo, descricao) values (cod, nm);
        set cod = LAST_INSERT_ID();
	end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure inserir_acao
-- -----------------------------------------------------

USE `u990873117_base`;
DROP procedure IF EXISTS `u990873117_base`.`inserir_acao`;

DELIMITER $$
USE `u990873117_base`$$
CREATE PROCEDURE inserir_acao (IN cod INT, IN nm VARCHAR(200), IN lng_cidada VARCHAR(200), IN cd_programa INT, IN cd_subfuncao INT)
BEGIN
	declare cd INT;
	SELECT codigo INTO cd FROM acao where codigo = cod;
    if cd is null then
		insert into acao(codigo, nome, linguagem_cidada, programa, subfuncao) values (cod, nm, lng_cidada, cd_programa, cd_subfuncao);
	end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure inserir_programa
-- -----------------------------------------------------

USE `u990873117_base`;
DROP procedure IF EXISTS `u990873117_base`.`inserir_programa`;

DELIMITER $$
USE `u990873117_base`$$
CREATE PROCEDURE inserir_programa (IN cod INT, IN nm VARCHAR(200))
BEGIN
	declare cd INT;
	SELECT codigo INTO cd FROM programa where codigo = cod;
    if cd is null then
		insert into programa(codigo, nome) values (cod, nm);
	end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure inserir_favorecido
-- -----------------------------------------------------

USE `u990873117_base`;
DROP procedure IF EXISTS `u990873117_base`.`inserir_favorecido`;

DELIMITER $$
USE `u990873117_base`$$
CREATE PROCEDURE inserir_favorecido (IN nm VARCHAR(300), IN cpf_fav VARCHAR(11))
BEGIN
	declare cp VARCHAR(11);
	SELECT cpf INTO cp FROM favorecido where cpf = cpf_fav;
    if cp is null then
		insert into favorecido(nome, cpf) values (nm, cpf_fav);
	end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure inserir_diaria
-- -----------------------------------------------------

USE `u990873117_base`;
DROP procedure IF EXISTS `u990873117_base`.`inserir_diaria`;

DELIMITER $$
USE `u990873117_base`$$
CREATE PROCEDURE inserir_diaria (
	IN cd_org_sup INT, IN nm_org_sup VARCHAR(200),
    IN cd_org_sub INT, IN nm_org_sub VARCHAR(200),
    IN cd_un_gest INT, IN nm_un_gest VARCHAR(200),
    IN cd_funcao INT, IN nm_funcao VARCHAR(200),
    IN cd_subfuncao INT, IN nm_subfuncao VARCHAR(200),
    IN cd_prog INT, IN nm_prog VARCHAR(200),
    IN cd_acao INT, IN nm_acao VARCHAR(200),
    IN ling_cidada VARCHAR(200),
    IN cpf_fav VARCHAR(11), IN nm_fav VARCHAR(300), 
    IN doc VARCHAR(15), IN gestao VARCHAR(11), IN dt DATE, IN val DECIMAL(10,2))
BEGIN
	DECLARE cd_ling_cidada INT;
    DECLARE cd_fav INT;
    
    CALL inserir_orgao_superior(cd_org_sup, nm_org_sup);
    CALL inserir_orgao_subordinado(cd_org_sub, nm_org_sub, cd_org_sup);
    CALL inserir_unidade_gestora(cd_un_gest, nm_un_gest, cd_org_sub);
    CALL inserir_funcao(cd_funcao, nm_funcao);
    CALL inserir_subfuncao(cd_subfuncao, nm_subfuncao, cd_funcao);
    CALL inserir_programa(cd_prog, nm_prog);
    CALL inserir_acao(cd_acao, nm_acao, ling_cidada, cd_prog, cd_subfuncao);
       
    CALL inserir_favorecido(nm_fav, cpf_fav);
    
    insert into diaria(
		favorecido, ug_pagadora, acao, 
        documento, gestao, dt_diaria, valor)
	values(
		cpf_fav, cd_un_gest, cd_acao, 
        doc, gestao, dt, val);
	
END$$

DELIMITER ;

-- -----------------------------------------------------
-- View `u990873117_base`.`vw_diarias`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `u990873117_base`.`vw_diarias` ;
DROP TABLE IF EXISTS `u990873117_base`.`vw_diarias`;
USE `u990873117_base`;
create  OR REPLACE view vw_diarias as
select 
	osup.codigo cd_orgao_superior, osup.nome nm_orgao_superior,
    osub.codigo cd_orgao_subordinado, osub.nome nm_orgao_subordinado,
    ug.codigo cd_unidade_gestora, ug.nome nm_unidade_gestora,
    fun.codigo cd_funcao, fun.nome nm_funcao,
    sf.codigo cd_subfuncao, sf.nome nm_subfuncao,
    p.codigo cd_programa, p.nome nm_programa,
    a.codigo cd_acao, a.nome nm_acao, a.linguagem_cidada linguagem_cidada,
    f.cpf cpf_favorecido, f.nome nm_favorecido,
	d.documento, d.gestao, d.dt_diaria, d.valor
from diaria d 
	join favorecido f on d.favorecido = f.cpf
    join unidade_gestora ug on d.ug_pagadora = ug.codigo
    join orgao osub on ug.orgao = osub.codigo
    join orgao osup on osub.orgao_sup = osup.codigo
    join acao a on d.acao = a.codigo
    join programa p on a.programa = p.codigo
    join subfuncao sf on a.subfuncao = sf.codigo
    join funcao fun on sf.funcao = fun.codigo
    ;
USE `u990873117_base`;

DELIMITER $$

USE `u990873117_base`$$
DROP TRIGGER IF EXISTS `u990873117_base`.`diaria_AFTER_INSERT` $$
USE `u990873117_base`$$
CREATE DEFINER = CURRENT_USER TRIGGER `u990873117_base`.`diaria_AFTER_INSERT` AFTER INSERT ON `diaria` FOR EACH ROW
BEGIN
    if new.valor >= 500 then
        insert into log(data, operacao) values (now(), concat('Nova diária de alto valor - documento: ', new.documento));
	end if;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
